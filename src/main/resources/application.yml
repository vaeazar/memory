spring:
  profiles:
    active: local

  datasource: #DB 접속정보
    driverClassName: com.mysql.cj.jdbc.Driver

  hikari: #Hikari 설정
    maximum-pool-size: 10
    #connection-test-query: SELECT 1
    data-source-properties:
      cachePrepStmts: true
      prepStmtCacheSize: 250
      prepStmtCacheSqlLimit: 2048
      useServerPrepStmts: true

  mvc: #JSP 설정
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp

  thymeleaf: #Thymeleaf 설정
    #JSP와 같이 사용시 뷰 구분을 위해 컨트롤러가 뷰 이름을 반환시 thymeleaf/ 로 시작하면 타임리프로 처리하도록 view-names 지정
    view-names: thymeleaf/*
    prefix: classpath:templates/
    suffix: .html
    #파일 수정시 반영하려면 하면 재시작을 해줘야 한다. 브라우저 새로고침시 수정사항 반영을 취해 cache=false 설정(운영시 true)
    cache: false
    check-template-location: true

mybatis: #Mybatis 설정
  type-aliases-package: com.maze.memory.domain
  mapper-locations: static/mapper/**/*.xml

log4jdbc: #log4jdbc 설정
  spylogdelegator:
    name: net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
  dump:
    sql:
      maxlinelength: 0

devtools: #jsp파일 서버 재시작 없이 바로 적용하기 spring-boot-devtools
  livereload:
    enabled: true

--- #local 환경
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://memory-maze.caynostdulbl.ap-northeast-2.rds.amazonaws.com:3306/memory?characterEncoding=UTF-8&serverTimezone=&useLegacyDatetimeCode=false&useSSL=false
    hikari:
      username: admin
      password: QWERasdf123!
  jpa:
    generate-ddl: false
    open-in-view: false
    show-sql: true
#    properties:
#      hibernate:
#        jdbc:
#          time_zone: UTC
#    hibernate:
#      ddl-auto: validate
#      naming-strategy: org.hibernate.cfg.EJB3NamingStrategy
#    properties:
#      hibernate.cache.use_second_level_cache: true
#      hibernate.cache.use_query_cache: false
#      hibernate.generate_statistics: true
#      hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
logging: # ROOT레벨 전체 로깅 레벨 결정
  level:
    root: info
    com:
      example:
        beerProj:
          main.repository: info #com.example.beerProj.main.repository 패키지 logging Level > info
          main.service: info #com.example.beerProj.main.service 패키지 logging Level > info
          main.controller: debug #com.example.beerProj.main.controller 패키지 logging Level > debug
#server:
#  ssl:
#    enabled: true
#    key-store: keystore.p12
#    key-store-password: 123456
#    key-store-type: PKCS12
#    key-alias: bns-ssl
#  port: 8443

--- #dev 환경
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://localhost:3306/memory?characterEncoding=UTF-8&serverTimezone=UTC
    hikari:
      username: root
      password: 2nL!ple
logging: # ROOT레벨 전체 로깅 레벨 결정
  level:
    root: info

--- #prod 환경
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://localhost:3306/memory?characterEncoding=UTF-8&serverTimezone=UTC
    hikari:
      username: root
      password: 2nL!ple
server:
  port: 9090
logging: # ROOT레벨 전체 로깅 레벨 결정
  level:
    root: error